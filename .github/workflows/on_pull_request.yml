name: On Pull Request

on: pull_request

jobs:
  build_linux_gcc:
    name: Build on Linux with GCC
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          sudo apt install -y libboost-dev libboost-filesystem-dev libboost-system-dev libboost-test-dev
      - name: Configure
        run: |
          set -x
          mkdir Release
          cd Release
          cmake -DBINLOG_FORCE_TESTS=ON ..
      - name: Build
        run: |
          cd Release
          make -j2 VERBOSE=1
      - name: Test
        run: |
          cd Release
          ctest -VV
      - name: Test Building as Subdir
        run: |
          mkdir SubdirTest && cd SubdirTest
          cmake -DCMAKE_CXX_STANDARD=14 ../test/cmake/subdir
          make -j2 VERBOSE=1
      - name: Test Depending on Install
        run: |
          make -C Release install DESTDIR=install
          export CMAKE_PREFIX_PATH=$(pwd)/Release/install/usr/local/lib/cmake
          mkdir InstallTest && cd InstallTest
          cmake ../test/cmake/install
          make -j2 VERBOSE=1

  build_linux_gcc_cpp17:
    name: Build on Linux with GCC, C++17
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          sudo apt install -y libboost-dev libboost-filesystem-dev libboost-system-dev libboost-test-dev
      - name: Configure
        run: |
          set -x
          mkdir Release
          cd Release
          cmake -DBINLOG_FORCE_TESTS=ON -DCMAKE_CXX_STANDARD=17 ..
      - name: Build
        run: |
          cd Release
          make -j2 VERBOSE=1
      - name: Test
        run: |
          cd Release
          ctest -VV

  build_linux_gcc_asan:
    name: Build on Linux with GCC+ASAN+UBSAN
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          sudo apt install -y libboost-dev libboost-filesystem-dev libboost-system-dev libboost-test-dev
      - name: Configure
        run: |
          set -x
          mkdir AddressSanitized
          cd AddressSanitized
          cmake -DBINLOG_FORCE_TESTS=ON -DBINLOG_USE_ASAN=On -DBINLOG_USE_UBSAN=On ..
      - name: Build
        run: |
          cd AddressSanitized
          make -j2 VERBOSE=1
      - name: Test
        run: |
          cd AddressSanitized
          ctest -VV

  build_linux_gcc_tsan:
    name: Build on Linux with GCC+TSAN
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          sudo apt install -y libboost-dev libboost-filesystem-dev libboost-system-dev libboost-test-dev
      - name: Configure
        run: |
          set -x
          mkdir ThreadSanitized
          cd ThreadSanitized
          cmake -DBINLOG_FORCE_TESTS=ON -DBINLOG_USE_TSAN=On ..
      - name: Build
        run: |
          cd ThreadSanitized
          make -j2 VERBOSE=1
      - name: Test
        run: |
          cd ThreadSanitized
          ctest -VV

  build_linux_clang_tidy:
    name: Build on Linux with Clang+Tidy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          # remove broken packages installed by default
          sudo apt remove -y clang-6.0 libclang-common-6.0-dev libclang1-6.0 libllvm6.0
          sudo apt install -y clang clang-tidy libboost-dev libboost-filesystem-dev libboost-system-dev libboost-test-dev
      - name: Configure
        run: |
          set -x
          mkdir Clang
          cd Clang
          export CC=$(which clang)
          export CXX=$(which clang++)
          cmake -DBINLOG_FORCE_TESTS=ON -DBINLOG_USE_CLANG_TIDY=On ..
      - name: Build
        run: |
          cd Clang
          make -j2 VERBOSE=1
      - name: Test
        run: |
          cd Clang
          ctest -VV

  build_linux_documentation:
    name: Build Documentation on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false

      - name: Install Dependencies
        run: |
          sudo apt install -y python3-markdown

      - name: Build
        run: |
          set -x
          mkdir Release
          cd Release
          cmake ..
          make Documentation
          mkdir doc
          cp ../doc/index.html *.html doc

  build_mac_clang:
    name: Build on macOS with Clang
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Boost
        id: cache-boost
        uses: actions/cache@v1
        with:
          path: boost_1_72_0/installdir
          key: osx-boost_1_72_0
      - name: Install Boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          wget https://netix.dl.sourceforge.net/project/boost/boost/1.72.0/boost_1_72_0.tar.gz -Oboost.tar.gz
          tar -zxf boost.tar.gz
          cd boost_1_72_0
          mkdir -p installdir
          ./bootstrap.sh --prefix=./installdir --with-libraries=filesystem,system,test
          ./b2 install
      - name: Build
        run: |
          cd boost_1_72_0/installdir
          BOOST_ROOT=$(pwd)
          cd ../../
          mkdir Release
          cd Release
          cmake -DBOOST_ROOT=${BOOST_ROOT} -DBoost_ARCHITECTURE=-x64 -DBINLOG_FORCE_TESTS=ON ..
          make -j2 VERBOSE=1
      - name: Test
        run: |
          cd Release
          ctest -VV

  build_win_msvc:
    name: Build on Windows with MSVC
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          $url = "https://github.com/actions/boost-versions/releases/download/1.72.0-20200608.4/boost-1.72.0-win32-msvc14.2-x86_64.tar.gz"
          (New-Object System.Net.WebClient).DownloadFile($url, "$env:TEMP\boost.tar.gz")
          7z.exe x "$env:TEMP\boost.tar.gz" -o"$env:TEMP\boostArchive" -y | Out-Null
          7z.exe x "$env:TEMP\boostArchive" -o"$env:TEMP\boost" -y | Out-Null
          Push-Location -Path "$env:TEMP\boost"
          Invoke-Expression .\setup.ps1
      - name: Configure
        run: |
          mkdir Release
          cd Release
          cmake -DBOOST_ROOT="${env:TEMP}\boost" -DBINLOG_FORCE_TESTS=ON ..
      - name: Build
        run: |
          cmake --build Release --config Release -j2
      - name: Test
        run: |
          $Env:path += ";${env:TEMP}\boost\lib"
          cd Release
          ctest -VV -C Release
